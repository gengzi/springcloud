<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>club.gsjblog.springcloud</groupId>
    <artifactId>gengzi-weather-web</artifactId>
    <version>1.2-SNAPSHOT</version>

    <description>
        #############
        天气预测系统：
        basic： 对接第三方的天气服务接口
        接口1： http://wthrcdn.etouch.cn/weather_mini?city=北京
        通过城市名字获得天气数据，json数据
        接口2： http://wthrcdn.etouch.cn/weather_mini?citykey=101010100
        通过城市id获得天气数据，json数据
        ##############
        version1.1 ：
        增加redis ，实现服务的高可用，使用redis 实现缓存
        将查询过的天气信息缓存到redis中
        F:\ruanjiuanbao\Redis-x64-3.2.100
        ##############
        version1.2：
        增加quartz，定时同步天气预报数据，半小时同步一次数据
        #############
        version1.3：
        绘制前端页面，展示天气信息


    </description>

    <!--spring cloud基于spring boot，配置spring boot parent-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.0.RELEASE</version>
        <relativePath/>
    </parent>

    <!--引入eureka-server -->
    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

        <!--引入httpclient来做模拟发送请求-->
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.3</version>
        </dependency>

        <!--引入spring data redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!--引入spring data quartz -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-quartz</artifactId>
        </dependency>


        <!--引入spring  后端模板引擎 thymeleaf-->
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>




    </dependencies>

    <!--打包插件-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>